# Create the areas list (updated version)
areas = ["hallway", 11.25, "kitchen", 18.0, "chill zone", 20.0,
         "bedroom", 10.75, "bathroom", 10.50]

# Add poolhouse data to areas, new list is areas_1
areas_1 = areas + ["poolhouse", 24.5]

# Add garage data to areas_1, new list is areas_2
areas_2 = areas_1 + ["garage", 15.45]

-------------------------------------------
areas = ["hallway", 11.25, "kitchen", 18.0,
        "chill zone", 20.0, "bedroom", 10.75,
         "bathroom", 10.50, "poolhouse", 24.5,
         "garage", 15.45]

# Delete the poolhouse items from the list
del areas[10]
del areas[10]

# Print the updated list
print(areas)

--------------
x = ["1", "2", "3", "4"]
numbers = 
list
(x)
x[0] = "0"
print(
numbers
[0])

-------------------
# Create variables var1 and var2
var1 = [1, 2, 3, 4]
var2 = True

# Print out type of var1

print(type(var1))

# Print out length of var1
print(len(var1))
# Convert var2 to an integer: out2
out2 =int(var2)

-----------------
# Create lists first and second
first = [11.25, 18.0, 20.0]
second = [10.75, 9.50]

# Paste together first and second: full
full = first + second

# Sort full in descending order: full_sorted
full_sorted = sorted(full, reverse=True)

# Print out full_sorted
print(full_sorted)


-------------
# string to experiment with: place
place = "poolhouse"

# Use upper() on place
place_up = place.upper()

# Print out place and place_up

print(place)
print(place_up)

# Print out the number of o's in place


print(place.count("o"))

--------------------

# Create list areas
areas = [11.25, 18.0, 20.0, 10.75, 9.50]

# Print out the index of the element 20.0
print(areas.index(20.0))

# Print out how often 9.50 appears in areas


print(areas.count(9.50))


-------------------
List Methods (2)
Most list methods will change the list they're called on. Examples are:

.append(), that adds an element to the list it is called on,
.remove(), that removes the first element of a list that matches the input, and
.reverse(), that reverses the order of the elements in the list it is called on.
You'll be working on the list with the area of different parts of the house: areas


---------------
# Create list areas
areas = [11.25, 18.0, 20.0, 10.75, 9.50]

# Use append twice to add poolhouse and garage size

firstAppend=areas.append(24.5)
secondAppend=areas.append(15.45)


# Print out areas

print(areas)
# Reverse the orders of the elements in areas

reversedArray=areas.reverse()

# Print out areas

print(areas)


*------
# Import the math package
import math

# Calculate C
C = 2 * 0.43 * math.pi

# Calculate A
A = math.pi * 0.43 ** 2

print("Circumference: " + str(C))
print("Area: " + str(A))

--------
# Import pi function of math package
from math import pi

# Calculate C
C = 2 * 0.43 * pi

# Calculate A
A = pi * 0.43 ** 2

print("Circumference: " + str(C))
print("Area: " + str(A))

------------------
Different ways of importing
There are several ways to import packages and modules into Python. Depending on the import call, you'll have to use different Python code.

Suppose you want to use the function inv(), which is in the linalg subpackage of the scipy package. You want to be able to use this function as follows:

my_inv([[1,2], [3,4]])
Which import statement will you need in order to run the above code without an error?



from scipy.linalg import inv as my_inv


-------------
p = [1, 16, 13, 6, 12, 14]
print(
sorted
(p, reverse=False))

----------
General imports are preferred over selective imports


---------------
x=[15,10,2,84]+[1,4,8,7,9]...what is the output of x.index(x.count(x[0]))

x[0] = 15
x.count(15)
x.count(x[0]) = 1
x.index(1)

| Value | Index |
| ----- | ----- |
| 15    | 0     |
| 10    | 1     |
| 2     | 2     |
| 84    | 3     |
| 1     | 4     |
| 4     | 5     |
| 8     | 6     |
| 7     | 7     |
| 9     | 8     |



