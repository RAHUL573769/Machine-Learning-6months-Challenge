# Print the last item from year and pop

poppedItem1=year[-1]
poppedItem2=pop[-1]
print(poppedItem1)
print(poppedItem2)

# Import matplotlib.pyplot as plt

import matplotlib.pyplot as plt

# Make a line plot: year on the x-axis, pop on the y-axis

plt.plot(year,pop)

# Display the plot with plt.show()

plt.show()

---------------
ou can check the population for a particular year by checking out the plot. If you want the exact result, use pop[year.index(2030)], to get the population for 2030, for example.'

---
# Print the last item of gdp_cap and life_exp


print(gdp_cap[-1])
print(life_exp[-1])
# Make a line plot, gdp_cap on the x-axis, life_exp on the y-axis

plt.plot(gdp_cap,life_exp)


# Display the plot

plt.show()
*---------------------
import matplotlib.pyplot as plt
import numpy as np # Assuming gdp_cap and life_exp are NumPy arrays or lists

# Sample data (replace with your actual gdp_cap and life_exp data)
gdp_cap = np.random.lognormal(mean=np.log(10000), sigma=1.0, size=100)
life_exp = 70 + 10 * np.log10(gdp_cap / 1000) + np.random.normal(scale=5, size=100)

# Change the line plot to a scatter plot
plt.scatter(gdp_cap, life_exp)

# Put the x-axis on a logarithmic scale
plt.xscale('log')

# Add labels and title for clarity (optional but recommended)
plt.xlabel("GDP per Capita")
plt.ylabel("Life Expectancy")
plt.title("Life Expectancy vs. GDP per Capita (Log Scale)")

# Show plot
plt.show()

----------------


# Import package

import matplotlib.pyplot as plt
# Build Scatter plot
plt.scatter(pop,life_exp)

# Show plot
plt.show()